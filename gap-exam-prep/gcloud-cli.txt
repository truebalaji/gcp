gcloud iam roles create app_viewer --project \
> $DEVSHELL_PROJECT_ID --file role.yaml

gsutil mb -l us-central1 gs://$DEVSHELL_PROJECT_ID

gsutil cp sample.txt gs://$DEVSHELL_PROJECT_ID

gcloud iam roles describe app_viewer --project \
$DEVSHELL_PROJECT_ID

gcloud iam roles update app_viewer --project \
$DEVSHELL_PROJECT_ID --file update-role.yaml

gcloud iam roles update app_viewer --project \
$DEVSHELL_PROJECT_ID --stage DISABLED // disable a role

gcloud iam roles delete app_viewer --project \
$DEVSHELL_PROJECT_ID //delete a role

gcloud iam roles undelete app_viewer --project \
$DEVSHELL_PROJECT_ID //undelete role file

There are three types of roles in Cloud IAM:

Primitive roles, which include the Owner, Editor, and Viewer roles that existed prior to the introduction of Cloud IAM.
Predefined roles, which provide granular access for a specific service and are managed by GCP.
Custom roles, which provide granular access according to a user-specified list of permissions.

gcloud iam roles list --project $DEVSHELL_PROJECT_ID //list roles

//sample role file - 1
title: Privacy Reviewer
description: Custom role to perform data reviews
stage: ALPHA
includedPermissions:
- storage.buckets.list
- storage.objects.list
- storage.objects.get
- spanner.databases.get- spanner.databases.list
- bigtable.tables.get
- bigtable.tables.list
- bigtable.tables.readRows
//-sample role file - 2
title: App Viewer
description: Custom role to view apps
stage: ALPHA
includedPermissions:
- compute.instances.get
- compute.instances.list
- appengine.versions.get
- appengine.versions.list

///

gcloud auth list
gcloud config list project

//create network in auto mode-------------------------------

gcloud compute networks create mynetwork --subnet-mode=auto

//create custom metwork

gcloud compute networks create privatenet \
--subnet-mode=custom

gcloud compute networks subnets create privatesubnet \
--network=privatenet --region=us-central1 \
--range=10.0.0.0/24 --enable-private-ip-google-access

Instances on this network will not be reachable until firewall rules
are created. As an example, you can allow all internal traffic between
instances as well as SSH, RDP, and ICMP by running:
$ gcloud compute firewall-rules create <FIREWALL_NAME> --network mynetwork --allow tcp,udp,icmp --source-ranges <IP_RANGE>
$ gcloud compute firewall-rules create <FIREWALL_NAME> --network mynetwork --allow tcp:22,tcp:3389,icmp

To create some instances to use later for testing in all networks, run these commands:

gcloud compute instances create default-us-vm \
--zone=us-central1-a --network=default

gcloud compute instances create mynet-us-vm \
--zone=us-central1-a --network=mynetwork

gcloud compute instances create mynet-eu-vm \
--zone=europe-west1-b --network=mynetwork

gcloud compute instances create privatenet-bastion \
--zone=us-central1-c --subnet=privatesubnet --can-ip-forward

gcloud compute instances create privatenet-us-vm \
--zone=us-central1-f --subnet=privatesubnet

gcloud compute ssh qwiklabs@mynet-eu-vm --zone europe-west1-b //ssh into instance

gcloud iam service-accounts create my-sa-123 --display-name "my service account"

Run the following in Cloud Shell to grant roles to the service account you just made
gcloud projects add-iam-policy-binding $DEVSHELL_PROJECT_ID \
    --member serviceAccount:my-sa-123@$DEVSHELL_PROJECT_ID.iam.gserviceaccount.com --role roles/editor

To retrieve the external IP address of the Cloud Shell instance, run the following commands:

ip=$(curl -s https://api.ipify.org)
echo "My External IP address is: $ip"

To add a firewall rule that allows port 22 (SSH) traffic from the Cloud Shell IP address, run the following command:

gcloud compute firewall-rules create \
mynetwork-ingress-allow-ssh-from-cs \
--network mynetwork --action ALLOW --direction INGRESS \
--rules tcp:22 --source-ranges $ip --target-tags=lab-ssh

Important You have just created and applied a firewall rule using a tag. One issue with tags is that they must be added to instances and could possibly be added or removed inadvertently. Firewall rules can also be applied to instances by the service account used. These rules will be applied automatically to all instances that use the specified service account.

To add the lab-ssh network tag to the mynet-eu-vm and mynet-us-vm instances, run the following commands in Cloud Shell:

gcloud compute instances add-tags mynet-eu-vm \
    --zone europe-west1-b \
    --tags lab-ssh
gcloud compute instances add-tags mynet-us-vm \
    --zone us-central1-a \
    --tags lab-ssh
    
To add a firewall rule that allows ALL instances in the mynetwork VPC to ping each other, run the following command:

gcloud compute firewall-rules create \
mynetwork-ingress-allow-icmp-internal --network \
mynetwork --action ALLOW --direction INGRESS --rules icmp \
--source-ranges 10.128.0.0/9

//List all firewall rules//

gcloud compute firewall-rules list \
--filter="network:mynetwork"

//Create a egress firewall rule to block any IP with priority 10000 

gcloud compute firewall-rules create \
mynetwork-egress-deny-icmp-all --network \
mynetwork --action DENY --direction EGRESS --rules icmp \
--priority 10000

To enable flow logging in two subnets, run the following commands in Cloud Shell:

gcloud compute networks subnets update default \
--region us-central1 --enable-flow-logs

gcloud compute networks subnets update default \
--region europe-west1 --enable-flow-logs

To create three instances in different subnets (to be used for later testing), run the following commands:

gcloud compute instances create default-us-vm \
--zone=us-central1-a --network=default

gcloud compute instances create default-eu-vm \
--zone=europe-west1-b --network=default

gcloud compute instances create default-ap-vm \
--zone=asia-southeast1-a --network=default

//disable flow logs

gcloud compute networks subnets update default \
--region europe-west1 --no-enable-flow-logs
